<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda</groupId>
    <artifactId>camunda-release-parent</artifactId>
    <version>3.9.1</version>
    <!-- do not remove empty tag - http://jira.codehaus.org/browse/MNG-4687 -->
    <relativePath />
  </parent>

  <name>Camunda RFC protocol outbound Connector</name>
  <description>Camunda RFC protocol outbound Connector</description>
  <groupId>io.camunda.connector.sap.rfc</groupId>
  <artifactId>rfc</artifactId>
  <version>8.5.0</version>
<!--  necessary for SAP BTP cf to pick up SAP's JCo lib -->
  <packaging>war</packaging>

  <properties>
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- connector SDK version -->
    <version.connectors>8.5.10</version.connectors>

    <!-- external libraries -->
    <version.assertj>3.26.3</version.assertj>
    <version.junit-jupiter>5.11.3</version.junit-jupiter>
    <version.mockito>5.14.2</version.mockito>
    <version.slf4j>2.0.16</version.slf4j>
    <version.cloud-sdk>5.12.0</version.cloud-sdk>

    <version.spring-boot>3.3.5</version.spring-boot>
    <version.jackson-databind>2.17.1</version.jackson-databind>
    <version.spring-boot-starter-camunda>8.5.10</version.spring-boot-starter-camunda>
    <version.logback>1.5.17</version.logback>


    <!-- maven plugins -->
    <plugin.version.maven-clean-plugin>3.4.0</plugin.version.maven-clean-plugin>
    <plugin.version.maven-compiler-plugin>3.13.0</plugin.version.maven-compiler-plugin>
    <plugin.version.maven-dependency-plugin>3.8.1</plugin.version.maven-dependency-plugin>
    <plugin.version.maven-install-plugin>3.1.3</plugin.version.maven-install-plugin>
    <plugin.version.maven-jar-plugin>3.4.2</plugin.version.maven-jar-plugin>
    <plugin.version.maven-war-plugin>3.4.0</plugin.version.maven-war-plugin>
    <plugin.version.maven-resources-plugin>3.3.1</plugin.version.maven-resources-plugin>
<!--    <plugin.version.maven-shade-plugin>3.5.2</plugin.version.maven-shade-plugin>-->
    <plugin.version.maven-surefire-plugin>3.5.2</plugin.version.maven-surefire-plugin>
    <plugin.version.spotless-maven-plugin>2.43.0</plugin.version.spotless-maven-plugin>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- SAP BTP cf related artifacts -->
      <dependency>
        <groupId>com.sap.cloud.sjb.cf</groupId>
        <artifactId>cf-tomee7-bom</artifactId>
        <version>2.13.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.sap.cloud.sdk</groupId>
        <artifactId>sdk-bom</artifactId>
        <version>${version.cloud-sdk}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- SAP BTP cf: Work around error in Buildpack BOM -->
      <dependency>
        <groupId>org.codehaus.woodstox</groupId>
        <artifactId>stax2-api</artifactId>
        <scope>compile</scope>
      </dependency>
      <!-- SAP BTP cf: Set Spring Boot Tomcat dependencies to provided -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-tomcat</artifactId>
        <scope>provided</scope>
      </dependency>


      <!-- Spring Boot BOM -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
        <version>${version.spring-boot}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>

  </dependencyManagement>


  <dependencies>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson-databind}</version>
      <scope>compile</scope>
    </dependency>
    <!-- connector-specific -->
    <dependency>
      <groupId>com.sap.cloud.sdk</groupId>
      <artifactId>sdk-core</artifactId>
      <version>${version.cloud-sdk}</version>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>com.sap.conn.jco</groupId>-->
<!--      <artifactId>com.sap.conn.jco.sapjco3</artifactId>-->
<!--      <version>${version.sap-jco}</version>-->
<!--      <scope>provided</scope>-->
<!--    </dependency>-->

    <!-- for SAP BTP cf, this is provided by the platform -->
    <!-- needs local installation for dev time-->
    <dependency>
      <groupId>com.sap.cloud</groupId>
      <artifactId>neo-java-web-api</artifactId>
      <version>[3.71.8,4.0.0)</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.sap.cloud.sdk.s4hana</groupId>
      <artifactId>s4hana-connectivity</artifactId>
      <version>${version.cloud-sdk}</version> <!-- uniform versioning w/ cloud sdk -->
    </dependency>

    <dependency>
      <groupId>com.sap.cloud.sdk.s4hana</groupId>
      <artifactId>rfc</artifactId>
      <version>${version.cloud-sdk}</version> <!-- uniform versioning w/ cloud sdk -->
    </dependency>

    <dependency>
      <groupId>com.sap.cloud.sdk.datamodel</groupId>
      <artifactId>odata-generator</artifactId>
      <version>${version.cloud-sdk}</version> <!-- uniform versioning w/ cloud sdk -->
    </dependency>


    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${version.logback}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${version.logback}</version>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
    </dependency>

    <!-- connector runtime -->

    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>spring-boot-starter-camunda-connectors</artifactId>
      <version>${version.spring-boot-starter-camunda}</version>
    </dependency>

    <!-- Element template generator annotations (compile-time only) -->
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>element-template-generator-core</artifactId>
      <version>${version.connectors}</version>
      <optional>true</optional>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-test</artifactId>
      <version>${version.connectors}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${version.junit-jupiter}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${version.assertj}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>${version.slf4j}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <!--    <pluginManagement>-->
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <mainClass>io.camunda.connector.sap.rfc.ApplicationRuntime</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${plugin.version.maven-clean-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${plugin.version.maven-dependency-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${plugin.version.maven-resources-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${plugin.version.maven-compiler-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${plugin.version.maven-jar-plugin}</version>
        <configuration>
          <useDefaultManifestFile>false</useDefaultManifestFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${plugin.version.maven-war-plugin}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${plugin.version.maven-install-plugin}</version>
      </plugin>
      <!--        <plugin>-->
      <!--          <groupId>org.apache.maven.plugins</groupId>-->
      <!--          <artifactId>maven-shade-plugin</artifactId>-->
      <!--          <version>${plugin.version.maven-shade-plugin}</version>-->
      <!--          <dependencies>-->
      <!--            <dependency>-->
      <!--              <groupId>org.springframework.boot</groupId>-->
      <!--              <artifactId>spring-boot-maven-plugin</artifactId>-->
      <!--              <version>${version.spring-boot}</version>-->
      <!--            </dependency>-->
      <!--          </dependencies>-->
      <!--          <configuration>-->
      <!--            <shadedArtifactAttached>true</shadedArtifactAttached>-->
      <!--            <shadedClassifierName>with-dependencies</shadedClassifierName>-->
      <!--            &lt;!&ndash; no need for this since we are not consuming this artifact downstream &ndash;&gt;-->
      <!--            <createDependencyReducedPom>false</createDependencyReducedPom>-->
      <!--            <filters>-->
      <!--              <filter>-->
      <!--                <artifact>*:*</artifact>-->
      <!--                <excludes>-->
      <!--                  <exclude>module-info.class</exclude>-->
      <!--                  <exclude>META-INF/MANIFEST.MF</exclude>-->
      <!--                  <exclude>META-INF/*.SF</exclude>-->
      <!--                  <exclude>META-INF/*.DSA</exclude>-->
      <!--                  <exclude>META-INF/*.RSA</exclude>-->
      <!--                </excludes>-->
      <!--              </filter>-->
      <!--            </filters>-->
      <!--            <transformers>-->
      <!--              &lt;!&ndash; This is needed if you have dependencies that use Service Loader. Most Google-->
      <!--              Cloud client libraries does. &ndash;&gt;-->
      <!--              <transformer-->
      <!--                implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />-->
      <!--              &lt;!&ndash; This is needed to not repeat licenses in the META-INF directory &ndash;&gt;-->
      <!--              <transformer-->
      <!--                implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />-->
      <!--              &lt;!&ndash; This is needed to merge existing NOTICE files and keep them downstream &ndash;&gt;-->
      <!--              <transformer-->
      <!--                implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">-->
      <!--                <addHeader>false</addHeader>-->
      <!--              </transformer>-->
      <!--              <transformer-->
      <!--                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
      <!--                <manifestEntries>-->
      <!--                  <Main-Class>io.camunda.connector.sap.rfc.ApplicationRuntime</Main-Class>-->
      <!--                </manifestEntries>-->
      <!--              </transformer>-->
      <!--            </transformers>-->
      <!--            &lt;!&ndash; Uncomment and adjust to use relocations inside your JAR &ndash;&gt;-->
      <!--            &lt;!&ndash;<relocations>-->
      <!--              <relocation>-->
      <!--                <pattern>com.fasterxml.jackson</pattern>-->
      <!--                <shadedPattern>myconnector.com.fasterxml.jackson</shadedPattern>-->
      <!--              </relocation>-->
      <!--            </relocations>&ndash;&gt;-->
      <!--          </configuration>-->
      <!--          <executions>-->
      <!--            <execution>-->
      <!--              <phase>package</phase>-->
      <!--              <goals>-->
      <!--                <goal>shade</goal>-->
      <!--              </goals>-->
      <!--            </execution>-->
      <!--          </executions>-->
      <!--        </plugin>-->
      <plugin>
        <groupId>io.camunda.connector</groupId>
        <artifactId>element-template-generator-maven-plugin</artifactId>
        <version>${version.connectors}</version>
        <executions>
          <execution>
            <goals>
              <goal>generate-templates</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <connectors>
            <connector>
              <connectorClass>io.camunda.connector.sap.rfc.RFCConnector</connectorClass>
            </connector>
          </connectors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${plugin.version.maven-surefire-plugin}</version>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${plugin.version.spotless-maven-plugin}</version>
        <configuration>
          <formats>
            <format>
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <trimTrailingWhitespace />
              <endWithNewline />
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
            </format>
          </formats>
          <java>
            <googleJavaFormat />
            <replace>
              <name>keepCoolSrcComment</name>
              <search>// ></search>
              <replacement>//></replacement>
            </replace>
          </java>
          <pom />
        </configuration>
      </plugin>
      <!--      </plugins>-->
      <!--    </pluginManagement>-->

      <!--    <plugins>-->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--      <plugin>-->
      <!--        <groupId>org.apache.maven.plugins</groupId>-->
      <!--        <artifactId>maven-shade-plugin</artifactId>-->
      <!--        <version>${plugin.version.maven-shade-plugin}</version>-->
      <!--        <configuration>-->
      <!--          <shadedArtifactAttached>true</shadedArtifactAttached>-->
      <!--          <shadedClassifierName>with-dependencies</shadedClassifierName>-->
      <!--          &lt;!&ndash; no need for this since we are not consuming this artifact downstream &ndash;&gt;-->
      <!--          <createDependencyReducedPom>false</createDependencyReducedPom>-->
      <!--          <filters>-->
      <!--            <filter>-->
      <!--              <artifact>*:*</artifact>-->
      <!--              <excludes>-->
      <!--                <exclude>module-info.class</exclude>-->
      <!--                <exclude>META-INF/MANIFEST.MF</exclude>-->
      <!--                <exclude>META-INF/*.SF</exclude>-->
      <!--                <exclude>META-INF/*.DSA</exclude>-->
      <!--                <exclude>META-INF/*.RSA</exclude>-->
      <!--              </excludes>-->
      <!--            </filter>-->
      <!--          </filters>-->
      <!--          <transformers>-->
      <!--            &lt;!&ndash; This is needed if you have dependencies that use Service Loader. Most Google-->
      <!--            Cloud client libraries does. &ndash;&gt;-->
      <!--            <transformer-->
      <!--              implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />-->
      <!--            &lt;!&ndash; This is needed to not repeat licenses in the META-INF directory &ndash;&gt;-->
      <!--            <transformer-->
      <!--              implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />-->
      <!--            &lt;!&ndash; This is needed to merge existing NOTICE files and keep them downstream &ndash;&gt;-->
      <!--            <transformer-->
      <!--              implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">-->
      <!--              <addHeader>false</addHeader>-->
      <!--            </transformer>-->
      <!--            <transformer-->
      <!--              implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
      <!--              <manifestEntries>-->
      <!--                <Main-Class>io.camunda.connector.sap.rfc.ApplicationRuntime</Main-Class>-->
      <!--              </manifestEntries>-->
      <!--            </transformer>-->
      <!--          </transformers>-->
      <!--          &lt;!&ndash; Uncomment and adjust to use relocations inside your JAR &ndash;&gt;-->
      <!--          &lt;!&ndash;<relocations>-->
      <!--            <relocation>-->
      <!--              <pattern>com.fasterxml.jackson</pattern>-->
      <!--              <shadedPattern>myconnector.com.fasterxml.jackson</shadedPattern>-->
      <!--            </relocation>-->
      <!--          </relocations>&ndash;&gt;-->
      <!--        </configuration>-->
      <!--        <executions>-->
      <!--          <execution>-->
      <!--            <phase>package</phase>-->
      <!--            <goals>-->
      <!--              <goal>shade</goal>-->
      <!--            </goals>-->
      <!--          </execution>-->
      <!--        </executions>-->
      <!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>io.camunda.connector</groupId>-->
<!--        <artifactId>element-template-generator-maven-plugin</artifactId>-->
<!--        <configuration>-->
<!--          <connectors>-->
<!--            <connector>-->
<!--              <connectorClass>io.camunda.connector.sap.rfc.RFCConnector</connectorClass>-->
<!--            </connector>-->
<!--          </connectors>-->
<!--        </configuration>-->
<!--      </plugin>-->
<!--      <plugin>-->
<!--        <groupId>com.diffplug.spotless</groupId>-->
<!--        <artifactId>spotless-maven-plugin</artifactId>-->
<!--      </plugin>-->
    </plugins>
  </build>

  <profiles>
    <!-- profile to auto format -->
    <profile>
      <id>autoFormat</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-format</id>
                <goals>
                  <goal>apply</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- profile to perform strict validation checks -->
    <profile>
      <id>checkFormat</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotless-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>connectors</id>
      <name>Connectors Repository</name>
      <url>https://artifacts.camunda.com/artifactory/connectors/</url>
    </repository>

    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>connectors-snapshots</id>
      <name>Connectors Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/connectors-snapshots/</url>
    </repository>

    <repository>
      <id>central</id>
      <name>Maven Central</name>
      <layout>default</layout>
      <url>https://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>connectors</id>
      <name>Connectors Repository</name>
      <url>https://artifacts.camunda.com/artifactory/connectors/</url>
    </pluginRepository>

    <pluginRepository>
      <id>connectors-snapshots</id>
      <name>Connectors Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/connectors-snapshots/</url>
    </pluginRepository>

    <pluginRepository>
      <id>central</id>
      <name>Maven Central</name>
      <layout>default</layout>
      <url>https://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>